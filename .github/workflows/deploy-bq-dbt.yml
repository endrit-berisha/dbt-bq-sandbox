name: BQ DBT

on:
  pull_request:
    branches:
      - master
      - develop
      - workflow
    paths:
      - 'dbt/**'
  push:
    branches:
      - master
      - develop
      - workflow
    paths:
      - 'dbt/**'

concurrency:
  group: ${{ github.ref }}

permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write

jobs:
  check:
    name: Check for DBT changes
    runs-on: ubuntu-latest
    outputs:
      dbt_changes: ${{ steps.set_output.outputs.dbt_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: changed
        uses: dorny/paths-filter@v2
        name: Get Changed Files
        with:
          filters: |
            dbt:
              - 'dbt/**'

      - name: Debug Changed Files
        run: |
          echo "Changed files: ${{ steps.changed.outputs.dbt }}"

      - id: dbt_changes
        run: |
          if [[ -n "${{ steps.changed.outputs.dbt }}" ]]; then
            echo "dbt_changes=TRUE" >> $GITHUB_ENV
            echo "DBT changes found in ${{ steps.changed.outputs.dbt }}"
          else
            echo "dbt_changes=false" >> $GITHUB_ENV
          fi

      - id: set_output
        name: Set DBT_CHANGES output
        run: echo "dbt_changes=${{ env.dbt_changes }}" >> $GITHUB_OUTPUT

  apply:
    name: Deploy DBT changes
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.BQ_KEYFILE_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.BQ_PROJECT }}

      - name: Determine Deployment
        
        env:
          BQ_PROJECT: ${{ secrets.BQ_PROJECT }}
          BQ_DATASET: ${{ secrets.BQ_DATASET }}
          BQ_KEYFILE_JSON: ${{ secrets.BQ_KEYFILE_JSON }}
          BQ_LOCATION: ${{ secrets.BQ_LOCATION }}
          PROF_CLIENT_CERT_URL: ${{ secrets.PROF_CLIENT_CERT_URL }}
          PROF_CLIENT_EMAIL: ${{ secrets.PROF_CLIENT_EMAIL }}
          PROF_CLIENT_ID: ${{ secrets.PROF_CLIENT_ID }}
          PROF_PRIVATE_KEY: ${{ secrets.PROF_PRIVATE_KEY }}
          PROF_PRIVATE_KEY_ID: ${{ secrets.PROF_PRIVATE_KEY_ID }}
        run: |
          if [ "${{ needs.check.outputs.dbt_changes }}" == "TRUE" ]; then
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              echo "DBT changes detected. Proceeding with pre-deployment."
              python pr_database_manager.py \
                --project_id=${{ secrets.BQ_PROJECT }} \
                --dataset_id="pr_db" \
                --credentials_json='${{ secrets.BQ_KEYFILE_JSON }}' \
                --dbt_path=./dbt \
                --dbt_target="pr_db"
            else
              echo "DBT changes detected. Proceeding with deployment."
              python pr_database_manager.py \
                --project_id=${{ secrets.BQ_PROJECT }} \
                --dataset_id="dev" \
                --credentials_json='${{ secrets.BQ_KEYFILE_JSON }}' \
                --dbt_path=./dbt \
                --dbt_target="dev"
            fi
          else
            echo "No DBT changes detected. Skipping deployment."
          fi

  cleanup:
    if: ${{ github.event.action == 'closed' }}
    name: Cleanup DBT - Pull Request Closed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.BQ_KEYFILE_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.BQ_PROJECT }}

      - name: Delete PR dataset in BigQuery
        run: |
          python pr_database_manager.py \
            --project_id=${{ secrets.BQ_PROJECT }} \
            --dataset_id="pr_db" \
            --credentials_json='${{ secrets.BQ_KEYFILE_JSON }}' \
            --dbt_path=./dbt \
            --dbt_target="dev" \
            --cleanup
